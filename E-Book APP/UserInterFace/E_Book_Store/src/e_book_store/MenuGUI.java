/**
 *
 * @author Mahmoud Ali Ahmed Abd El-Khaliq Salem   Code : 12200271
 * @author Mahmoud Hamdy Ameen Shazly              Code : 12200159
 * @author Sama Amr Mohamed Rizk Mosa              Code : 12200050
 * 
 */

package e_book_store;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class MenuGUI extends javax.swing.JFrame {

    /**
     * Creates new form MenuGUI
     */
    public MenuGUI() {
        initComponents();
        this.setLocation(410, 150);
        Menu_Panal.setVisible(true);
        this.setResizable(false);
        jTabbedPane1.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        Menu_Panal = new javax.swing.JPanel();
        Search = new javax.swing.JButton();
        Books = new javax.swing.JButton();
        Author = new javax.swing.JButton();
        Publisher = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Books_Panal = new javax.swing.JPanel();
        Back_Books_Panal = new javax.swing.JButton();
        Insert_Books = new javax.swing.JButton();
        Update_Books = new javax.swing.JButton();
        Delete_Books = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Book_Code = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Book_Title = new javax.swing.JTextField();
        Book_Price = new javax.swing.JTextField();
        Page_Count = new javax.swing.JTextField();
        Book_Type = new javax.swing.JTextField();
        Publisher_ID = new javax.swing.JTextField();
        View_Books_Table = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        Back_Books_Table_Panal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Books_Table = new javax.swing.JTable();
        Back_Books_Table = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Books_Panal1 = new javax.swing.JPanel();
        Back_Authors_Panal = new javax.swing.JButton();
        Author_Insert = new javax.swing.JButton();
        Update_Authors = new javax.swing.JButton();
        Delete_Books1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Author_ID = new javax.swing.JTextField();
        View_Authors_Table = new javax.swing.JButton();
        Author_L_Name = new javax.swing.JTextField();
        Author_F_Name = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Authors_Table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Back_Authors_Table = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        Publisher_Insert = new javax.swing.JButton();
        Update_Publisher = new javax.swing.JButton();
        Delete_Publisher = new javax.swing.JButton();
        View_Authors_Table1 = new javax.swing.JButton();
        Back_Authors_Panal1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        Publisher_Code = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Publisher_City = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Publisher_Name = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Publisher_Phone = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Publishers_Table = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        Back_Publishers_Table = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        Search_for_Book = new javax.swing.JButton();
        Author_Search = new javax.swing.JTextField();
        Publisher_Search = new javax.swing.JTextField();
        Search_for_Author = new javax.swing.JButton();
        Search_for_Publisher = new javax.swing.JButton();
        Book_Search = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        Back_Publisher_Search = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        Back_Author_Search = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Book_Search_Code = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        Back_Book_Search = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menu_Panal.setBackground(new java.awt.Color(153, 204, 255));
        Menu_Panal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                Menu_PanalComponentHidden(evt);
            }
        });

        Search.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Search.setForeground(new java.awt.Color(51, 0, 51));
        Search.setText("Search");
        Search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Books.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Books.setForeground(new java.awt.Color(51, 0, 51));
        Books.setText("Books");
        Books.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Books.setMaximumSize(new java.awt.Dimension(93, 29));
        Books.setMinimumSize(new java.awt.Dimension(93, 29));
        Books.setPreferredSize(new java.awt.Dimension(93, 29));
        Books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BooksActionPerformed(evt);
            }
        });

        Author.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Author.setForeground(new java.awt.Color(51, 0, 51));
        Author.setText("Authors");
        Author.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Author.setMaximumSize(new java.awt.Dimension(93, 29));
        Author.setMinimumSize(new java.awt.Dimension(93, 29));
        Author.setPreferredSize(new java.awt.Dimension(93, 29));
        Author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthorActionPerformed(evt);
            }
        });

        Publisher.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Publisher.setForeground(new java.awt.Color(51, 0, 51));
        Publisher.setText("Publishers");
        Publisher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PublisherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Menu_PanalLayout = new javax.swing.GroupLayout(Menu_Panal);
        Menu_Panal.setLayout(Menu_PanalLayout);
        Menu_PanalLayout.setHorizontalGroup(
            Menu_PanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu_PanalLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Menu_PanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Author, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Books, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        Menu_PanalLayout.setVerticalGroup(
            Menu_PanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu_PanalLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(Books, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(Author, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(Publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        getContentPane().add(Menu_Panal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 390));

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/e_book_store/digital-library256.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        jLabel8.setText("Welcome  in  Your  EBook  Store");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel8)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        Books_Panal.setBackground(new java.awt.Color(219, 235, 251));
        Books_Panal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Books_Panal.setForeground(new java.awt.Color(255, 255, 255));
        Books_Panal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Back_Books_Panal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Books_Panal.setText("Back To Menu");
        Back_Books_Panal.setToolTipText("");
        Back_Books_Panal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Books_Panal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Books_PanalActionPerformed(evt);
            }
        });
        Books_Panal.add(Back_Books_Panal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 120, -1));

        Insert_Books.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Insert_Books.setText("Insert");
        Insert_Books.setToolTipText("");
        Insert_Books.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Insert_Books.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Insert_BooksMouseEntered(evt);
            }
        });
        Insert_Books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_BooksActionPerformed(evt);
            }
        });
        Books_Panal.add(Insert_Books, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 85, -1));

        Update_Books.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Update_Books.setText("Update");
        Update_Books.setToolTipText("");
        Update_Books.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Update_Books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_BooksActionPerformed(evt);
            }
        });
        Books_Panal.add(Update_Books, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 85, -1));

        Delete_Books.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Delete_Books.setText("Delete");
        Delete_Books.setToolTipText("");
        Delete_Books.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Delete_Books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_BooksActionPerformed(evt);
            }
        });
        Books_Panal.add(Delete_Books, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 85, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Book Code");
        Books_Panal.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 85, -1));
        Books_Panal.add(Book_Code, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 142, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Book Title");
        Books_Panal.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 85, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Book Price");
        Books_Panal.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 85, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Book Type");
        Books_Panal.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 85, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Page Count");
        Books_Panal.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 85, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Publisher ID");
        Books_Panal.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 85, -1));
        Books_Panal.add(Book_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 142, -1));
        Books_Panal.add(Book_Price, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 142, -1));

        Page_Count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Page_CountActionPerformed(evt);
            }
        });
        Books_Panal.add(Page_Count, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 142, -1));

        Book_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Book_TypeActionPerformed(evt);
            }
        });
        Books_Panal.add(Book_Type, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 142, -1));

        Publisher_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publisher_IDActionPerformed(evt);
            }
        });
        Books_Panal.add(Publisher_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 142, -1));

        View_Books_Table.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        View_Books_Table.setText("Show Books");
        View_Books_Table.setToolTipText("");
        View_Books_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        View_Books_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Books_TableActionPerformed(evt);
            }
        });
        Books_Panal.add(View_Books_Table, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 133, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/e_book_store/books.png"))); // NOI18N
        Books_Panal.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, -1, 140));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Books_Panal, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Books_Panal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        Back_Books_Table_Panal.setBackground(new java.awt.Color(219, 235, 251));

        Books_Table.setBackground(new java.awt.Color(219, 235, 251));
        Books_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Price", "Page_count", "Type", "P_id"
            }
        ));
        jScrollPane1.setViewportView(Books_Table);

        Back_Books_Table.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Books_Table.setText("Back");
        Back_Books_Table.setToolTipText("");
        Back_Books_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Books_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Books_TableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Back_Books_Table_PanalLayout = new javax.swing.GroupLayout(Back_Books_Table_Panal);
        Back_Books_Table_Panal.setLayout(Back_Books_Table_PanalLayout);
        Back_Books_Table_PanalLayout.setHorizontalGroup(
            Back_Books_Table_PanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Back_Books_Table_PanalLayout.createSequentialGroup()
                .addGroup(Back_Books_Table_PanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Back_Books_Table_PanalLayout.createSequentialGroup()
                        .addComponent(Back_Books_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(204, 204, 204)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Back_Books_Table_PanalLayout.setVerticalGroup(
            Back_Books_Table_PanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Back_Books_Table_PanalLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Back_Books_Table)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", Back_Books_Table_Panal);

        Books_Panal1.setBackground(new java.awt.Color(219, 235, 251));
        Books_Panal1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Books_Panal1.setForeground(new java.awt.Color(255, 255, 255));
        Books_Panal1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Back_Authors_Panal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Authors_Panal.setText("Back To Menu");
        Back_Authors_Panal.setToolTipText("");
        Back_Authors_Panal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Authors_Panal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Authors_PanalActionPerformed(evt);
            }
        });
        Books_Panal1.add(Back_Authors_Panal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 120, -1));

        Author_Insert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Author_Insert.setText("Insert");
        Author_Insert.setToolTipText("");
        Author_Insert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Author_Insert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Author_InsertMouseEntered(evt);
            }
        });
        Author_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Author_InsertActionPerformed(evt);
            }
        });
        Books_Panal1.add(Author_Insert, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 85, -1));

        Update_Authors.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Update_Authors.setText("Update");
        Update_Authors.setToolTipText("");
        Update_Authors.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Update_Authors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_AuthorsActionPerformed(evt);
            }
        });
        Books_Panal1.add(Update_Authors, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 85, -1));

        Delete_Books1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Delete_Books1.setText("Delete");
        Delete_Books1.setToolTipText("");
        Delete_Books1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Delete_Books1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Books1ActionPerformed(evt);
            }
        });
        Books_Panal1.add(Delete_Books1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 85, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Author ID");
        Books_Panal1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 85, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("First Name");
        Books_Panal1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 85, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Last Name");
        Books_Panal1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 85, -1));
        Books_Panal1.add(Author_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 130, -1));

        View_Authors_Table.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        View_Authors_Table.setText("Show Authors");
        View_Authors_Table.setToolTipText("");
        View_Authors_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        View_Authors_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Authors_TableActionPerformed(evt);
            }
        });
        Books_Panal1.add(View_Authors_Table, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 133, -1));
        Books_Panal1.add(Author_L_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 130, -1));
        Books_Panal1.add(Author_F_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 130, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/e_book_store/writer.png"))); // NOI18N
        jLabel12.setText("jLabel12");
        Books_Panal1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 130, 160));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Books_Panal1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Books_Panal1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Authors_Table.setBackground(new java.awt.Color(219, 235, 251));
        Authors_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Author_id", "First_name", "Last_name"
            }
        ));
        jScrollPane2.setViewportView(Authors_Table);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 464, 309));

        jPanel3.setBackground(new java.awt.Color(219, 235, 251));

        Back_Authors_Table.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Authors_Table.setText("Back");
        Back_Authors_Table.setToolTipText("");
        Back_Authors_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Authors_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Authors_TableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(Back_Authors_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(193, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(Back_Authors_Table)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 470, 60));

        jTabbedPane1.addTab("tab5", jPanel5);

        jPanel9.setBackground(new java.awt.Color(219, 235, 251));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Publisher_Insert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Publisher_Insert.setText("Insert");
        Publisher_Insert.setToolTipText("");
        Publisher_Insert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Publisher_Insert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Publisher_InsertMouseEntered(evt);
            }
        });
        Publisher_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publisher_InsertActionPerformed(evt);
            }
        });
        jPanel9.add(Publisher_Insert, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 85, -1));

        Update_Publisher.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Update_Publisher.setText("Update");
        Update_Publisher.setToolTipText("");
        Update_Publisher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Update_Publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_PublisherActionPerformed(evt);
            }
        });
        jPanel9.add(Update_Publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 85, -1));

        Delete_Publisher.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Delete_Publisher.setText("Delete");
        Delete_Publisher.setToolTipText("");
        Delete_Publisher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Delete_Publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_PublisherActionPerformed(evt);
            }
        });
        jPanel9.add(Delete_Publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 85, -1));

        View_Authors_Table1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        View_Authors_Table1.setText("Show Authors");
        View_Authors_Table1.setToolTipText("");
        View_Authors_Table1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        View_Authors_Table1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Authors_Table1ActionPerformed(evt);
            }
        });
        jPanel9.add(View_Authors_Table1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 133, -1));

        Back_Authors_Panal1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Authors_Panal1.setText("Back To Menu");
        Back_Authors_Panal1.setToolTipText("");
        Back_Authors_Panal1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Authors_Panal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Authors_Panal1ActionPerformed(evt);
            }
        });
        jPanel9.add(Back_Authors_Panal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 120, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Publisher Code");
        jPanel9.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 110, -1));

        Publisher_Code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publisher_CodeActionPerformed(evt);
            }
        });
        jPanel9.add(Publisher_Code, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 142, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Publisher Name");
        jPanel9.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 110, 20));

        Publisher_City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publisher_CityActionPerformed(evt);
            }
        });
        jPanel9.add(Publisher_City, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 142, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Publisher Phone");
        jPanel9.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 110, -1));
        jPanel9.add(Publisher_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 142, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Publisher City");
        jPanel9.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 100, -1));

        Publisher_Phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publisher_PhoneActionPerformed(evt);
            }
        });
        jPanel9.add(Publisher_Phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 142, -1));

        jTabbedPane1.addTab("tab6", jPanel9);

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Publishers_Table.setAutoCreateRowSorter(true);
        Publishers_Table.setBackground(new java.awt.Color(219, 235, 251));
        Publishers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P_id", "P_name", "Phone", "City"
            }
        ));
        jScrollPane3.setViewportView(Publishers_Table);

        jPanel10.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 310));

        jPanel12.setBackground(new java.awt.Color(219, 235, 251));

        Back_Publishers_Table.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Publishers_Table.setText("Back");
        Back_Publishers_Table.setToolTipText("");
        Back_Publishers_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Publishers_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Publishers_TableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(192, 192, 192)
                    .addComponent(Back_Publishers_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(Back_Publishers_Table)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );

        jPanel10.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 470, 60));

        jTabbedPane1.addTab("tab7", jPanel10);

        jPanel11.setBackground(new java.awt.Color(219, 235, 251));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Search_for_Book.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Search_for_Book.setText("Serach");
        Search_for_Book.setToolTipText("");
        Search_for_Book.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Search_for_Book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_for_BookMouseEntered(evt);
            }
        });
        Search_for_Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_for_BookActionPerformed(evt);
            }
        });
        jPanel11.add(Search_for_Book, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 85, -1));

        Author_Search.setText("Enter Author ID");
        Author_Search.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Author_Search.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        Author_Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Author_SearchMouseClicked(evt);
            }
        });
        jPanel11.add(Author_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 160, 30));

        Publisher_Search.setText("Enter Publisher Code");
        Publisher_Search.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Publisher_Search.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        Publisher_Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Publisher_SearchMouseClicked(evt);
            }
        });
        Publisher_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publisher_SearchActionPerformed(evt);
            }
        });
        jPanel11.add(Publisher_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 160, 30));

        Search_for_Author.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Search_for_Author.setText("Serach");
        Search_for_Author.setToolTipText("");
        Search_for_Author.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Search_for_Author.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_for_AuthorMouseEntered(evt);
            }
        });
        Search_for_Author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_for_AuthorActionPerformed(evt);
            }
        });
        jPanel11.add(Search_for_Author, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 85, -1));

        Search_for_Publisher.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Search_for_Publisher.setText("Serach");
        Search_for_Publisher.setToolTipText("");
        Search_for_Publisher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Search_for_Publisher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_for_PublisherMouseEntered(evt);
            }
        });
        Search_for_Publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_for_PublisherActionPerformed(evt);
            }
        });
        jPanel11.add(Search_for_Publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 85, -1));

        Book_Search.setText("Enter Book Code");
        Book_Search.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        Book_Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Book_SearchMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Book_SearchMouseExited(evt);
            }
        });
        Book_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Book_SearchActionPerformed(evt);
            }
        });
        jPanel11.add(Book_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 160, 30));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Search For Publisher");
        jPanel11.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 140, 30));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Search For Book");
        jPanel11.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 110, 30));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Search For Author");
        jPanel11.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 130, 30));

        jTabbedPane1.addTab("tab8", jPanel11);

        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(219, 235, 251));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P_id", "P_name", "Phone", "City"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jPanel14.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 310));

        jPanel17.setBackground(new java.awt.Color(219, 235, 251));

        Back_Publisher_Search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Publisher_Search.setText("Back");
        Back_Publisher_Search.setToolTipText("");
        Back_Publisher_Search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Publisher_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Publisher_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addGap(192, 192, 192)
                    .addComponent(Back_Publisher_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(Back_Publisher_Search)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );

        jPanel14.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 470, 60));

        jTabbedPane1.addTab("tab9", jPanel14);

        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setBackground(new java.awt.Color(219, 235, 251));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Author_id", "First_name", "Last_name"
            }
        ));
        jScrollPane5.setViewportView(jTable2);

        jPanel15.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 464, 310));

        jPanel18.setBackground(new java.awt.Color(219, 235, 251));

        Back_Author_Search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Author_Search.setText("Back");
        Back_Author_Search.setToolTipText("");
        Back_Author_Search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Author_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Author_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel18Layout.createSequentialGroup()
                    .addGap(192, 192, 192)
                    .addComponent(Back_Author_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel18Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(Back_Author_Search)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );

        jPanel15.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 470, 60));

        jTabbedPane1.addTab("tab10", jPanel15);

        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Book_Search_Code.setBackground(new java.awt.Color(219, 235, 251));
        Book_Search_Code.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Price", "Page_count", "Type", "P_id"
            }
        ));
        jScrollPane6.setViewportView(Book_Search_Code);

        jPanel16.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 310));

        jPanel19.setBackground(new java.awt.Color(219, 235, 251));

        Back_Book_Search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_Book_Search.setText("Back");
        Back_Book_Search.setToolTipText("");
        Back_Book_Search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        Back_Book_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Book_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(Back_Book_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Back_Book_Search)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel16.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 470, 60));

        jTabbedPane1.addTab("tab11", jPanel16);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, -30, 470, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_SearchActionPerformed

    private void BooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BooksActionPerformed
        // TODO add your handling code here:
        //Books_Panal.setVisible(true);
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_BooksActionPerformed

    private void AuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
        //DefaultTableModel BooksTable = (DefaultTableModel) Books_Table.getModel();
        //BooksTable.setRowCount(0);

    }//GEN-LAST:event_AuthorActionPerformed

    private void PublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PublisherActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);

    }//GEN-LAST:event_PublisherActionPerformed

    private void Menu_PanalComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Menu_PanalComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_Menu_PanalComponentHidden

    private void Back_Books_PanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Books_PanalActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_Back_Books_PanalActionPerformed

    private void Insert_BooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_BooksActionPerformed
        // TODO add your handling code here:
        String ISBN = Book_Code.getText();
        String Title = Book_Title.getText();
        String Price = Book_Price.getText();
        String Page_count = Page_Count.getText();
        String Type = Book_Type.getText();
        String P_id = Publisher_ID.getText();
        // check for not null attribuets
        if(Book_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Book's Code");
        }
        else if(Book_Title.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Book's Title");
        }
        else if(Book_Price.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Book's Price");
        }
        else if(Book_Type.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Book's Type");
        }
        else if(Publisher_ID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher ID");
        }
        else {

            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("insert into Books values('"+ISBN+"','"+Title+"',"
                        + "'"+Price+"','"+Page_count+"','"+Type+"','"+P_id+"')");
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "INSERTED Successfuly");
                //disconnect with database
                con.close();
                Book_Code.setText(null);
                Book_Title.setText(null);
                Book_Price.setText(null);
                Page_Count.setText(null);
                Book_Type.setText(null);
                Publisher_ID.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Insert_BooksActionPerformed

    private void Update_BooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_BooksActionPerformed
        // TODO add your handling code here:
        String ISBN = Book_Code.getText();
        String Title = Book_Title.getText();
        String Price = Book_Price.getText();
        String Page_count = Page_Count.getText();
        String Type = Book_Type.getText();
        String P_id = Publisher_ID.getText();

        if(Book_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Book's Code You Want To Update");
        }
        else if(Book_Title.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The New Book's Title");
        }
        else if(Book_Price.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The New Book's Price");
        }
        else if(Book_Type.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The New Book's Type");
        }
        else if(Publisher_ID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The New Publisher ID");
        }
        else {
            try {
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);

                Statement stm = con.createStatement();

                stm.executeUpdate("UPDATE Books SET Title = '"+Title+"',"
                    + " Price = '"+Price+"', Page_count = '"+Page_count+"',"
                    + "Type = '"+Type+"',P_id = '"+P_id+"'"
                    + "WHERE ISBN = '"+ISBN+"'");
                
                JOptionPane.showMessageDialog(null, "UPDATED Successfuly");
                //disconnect with database
                con.close();
                Book_Code.setText(null);
                Book_Title.setText(null);
                Book_Price.setText(null);
                Page_Count.setText(null);
                Book_Type.setText(null);
                Publisher_ID.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Update_BooksActionPerformed

    private void Delete_BooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_BooksActionPerformed
        // TODO add your handling code here:
        String ISBN = Book_Code.getText();
        if(Book_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Book's Code");
        }
        else {
            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("DELETE FROM Books WHERE ISBN = '"+ISBN+"';");
                
                //Refresh BooksTable
                //DefaultTableModel BooksTable = (DefaultTableModel) Books_Table.getModel();
                //BooksTable.setRowCount(0);
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "DELETED Successfuly");
                //disconnect with database
                con.close();
                Book_Code.setText(null);
                Book_Title.setText(null);
                Book_Price.setText(null);
                Page_Count.setText(null);
                Book_Type.setText(null);
                Publisher_ID.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Delete_BooksActionPerformed

    private void Book_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Book_TypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Book_TypeActionPerformed

    private void View_Books_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Books_TableActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
            try {
                //Refresh BooksTable  
                DefaultTableModel BooksT = (DefaultTableModel) Books_Table.getModel();
                BooksT.setRowCount(0);
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);
                
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("SELECT * FROM Books order by ISBN ASC ");
                
                while(rs.next())
                {
                    String ISBN = rs.getString("ISBN");
                    String Title = rs.getString("Title");
                    String Price = String.valueOf(rs.getDouble("Price"));
                    String Page_count = rs.getString("Page_count");
                    String Type = rs.getString("Type");
                    String P_id = rs.getString("P_id");
                    
                    //String array to store BooksTable Data into jtable
                    
                    String BooksData[] = {ISBN, Title, Price, Page_count, Type, P_id};
                    DefaultTableModel BooksTable = (DefaultTableModel) Books_Table.getModel();
                    
                    //add String array BooksData into JTable
                    
                    BooksTable.addRow(BooksData);
                }
                //disconnect with database
                con.close();
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_View_Books_TableActionPerformed

    private void Back_Books_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Books_TableActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_Back_Books_TableActionPerformed

    private void Insert_BooksMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Insert_BooksMouseEntered
        // TODO add your handling code here
    }//GEN-LAST:event_Insert_BooksMouseEntered

    private void Back_Authors_PanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Authors_PanalActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_Back_Authors_PanalActionPerformed

    private void Author_InsertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Author_InsertMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Author_InsertMouseEntered

    private void Author_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Author_InsertActionPerformed
        // TODO add your handling code here:
        String Author_id = Author_ID.getText();
        String First_name = Author_F_Name.getText();
        String Last_name = Author_L_Name.getText();
        if(Author_ID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's ID");
        }
        else if(Author_F_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's First Name");
        }
        else if(Author_L_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's Last Name");
        }
        else {

            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("INSERT INTO Authors VALUES('"+Author_id+"',"
                        + "'"+First_name+"','"+Last_name+"')"); 
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "INSERTED Successfuly");
                //disconnect with database
                con.close();
                Author_ID.setText(null);
                Author_F_Name.setText(null);
                Author_L_Name.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Author_InsertActionPerformed

    private void Update_AuthorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_AuthorsActionPerformed
        // TODO add your handling code here:
        String Author_id = Author_ID.getText();
        String First_name = Author_F_Name.getText();
        String Last_name = Author_L_Name.getText();
        if(Author_ID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's ID");
        }
        else if(Author_F_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's New First Name");
        }
        else if(Author_L_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's New Last Name");
        }
        else {

            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("UPDATE Authors SET First_name = '"+First_name+"',"
                    + " Last_name = '"+Last_name+"'WHERE Author_id = '"+Author_id+"'"); 
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "UPDATED Successfuly");
                //disconnect with database
                con.close();
                Author_ID.setText(null);
                Author_F_Name.setText(null);
                Author_L_Name.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Update_AuthorsActionPerformed

    private void Delete_Books1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Books1ActionPerformed
        // TODO add your handling code here:
        String Author_id = Author_ID.getText();
        if(Author_ID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Author's ID");
        }
        else {
            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("DELETE FROM Authors WHERE Author_id = '"+Author_id+"';");
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "DELETED Successfuly");
                //disconnect with database
                con.close();
                Author_ID.setText(null);
                Author_F_Name.setText(null);
                Author_L_Name.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Delete_Books1ActionPerformed

    private void View_Authors_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Authors_TableActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
            try {
                //Refresh AuthorsTable  
                DefaultTableModel AuthorsT = (DefaultTableModel) Authors_Table.getModel();
                AuthorsT.setRowCount(0);
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("SELECT * FROM Authors");
                
                while(rs.next())
                {
                    String Author_id = rs.getString("Author_id");
                    String First_name = rs.getString("First_name");
                    String Last_name = rs.getString("Last_name");
                    
                    //String array to store AuthorsTable Data into jtable
                    
                    String AuthorsData[] = {Author_id, First_name, Last_name};
                    DefaultTableModel AuthorsTable = (DefaultTableModel) Authors_Table.getModel();
                    
                    //add String array AuthorsData into JTable
                    
                    AuthorsTable.addRow(AuthorsData);
                }
                //disconnect with database
                con.close();
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_View_Authors_TableActionPerformed

    private void Publisher_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publisher_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Publisher_IDActionPerformed

    private void Publisher_InsertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Publisher_InsertMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Publisher_InsertMouseEntered

    private void Publisher_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publisher_InsertActionPerformed
        // TODO add your handling code here:
        String P_id = Publisher_Code.getText();
        String P_name = Publisher_Name.getText();
        String Phone = Publisher_Phone.getText();
        String City = Publisher_City.getText();

        // check for not null attribuets
        if(Publisher_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Code");
        }
        else if(Publisher_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Name");
        }
        else if(Publisher_Phone.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Phone");
        }
        else if(Publisher_City.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's City");
        }
        else {

            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("insert into Publishers values('"+P_id+"','"+P_name+"',"
                        + "'"+Phone+"','"+City+"')");
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "INSERTED Successfuly");
                //disconnect with database
                con.close();
                Publisher_Code.setText(null);
                Publisher_Name.setText(null);
                Publisher_Phone.setText(null);
                Publisher_City.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Publisher_InsertActionPerformed

    private void Update_PublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_PublisherActionPerformed
        // TODO add your handling code here:
        String P_id = Publisher_Code.getText();
        String P_name = Publisher_Name.getText();
        String Phone = Publisher_Phone.getText();
        String City = Publisher_City.getText();

        // check for not null attribuets
        if(Publisher_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Code");
        }
        else if(Publisher_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Name");
        }
        else if(Publisher_Phone.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Phone");
        }
        else if(Publisher_City.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's City");
        }
        else {

            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("UPDATE Publishers SET P_name= '"+P_name+"',"
                    + " Phone = '"+Phone+"', City = '"+City+"' WHERE P_id = '"+P_id+"'");
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "UPDATED Successfuly");
                //disconnect with database
                con.close();
                Publisher_Code.setText(null);
                Publisher_Name.setText(null);
                Publisher_Phone.setText(null);
                Publisher_City.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Update_PublisherActionPerformed

    private void Delete_PublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_PublisherActionPerformed
        // TODO add your handling code here:
        String P_id = Publisher_Code.getText();
        if(Publisher_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter The Publisher's Code");
        }
        else {
            try {
                //call jdbc
                Class.forName(driver);
                
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                stm.executeUpdate("DELETE FROM Publishers WHERE P_id = '"+P_id+"';");
                
                //Show Successful Message
                JOptionPane.showMessageDialog(null, "DELETED Successfuly");
                //disconnect with database
                con.close();
                Publisher_Code.setText(null);
                Publisher_Name.setText(null);
                Publisher_Phone.setText(null);
                Publisher_City.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_Delete_PublisherActionPerformed

    private void View_Authors_Table1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Authors_Table1ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(6);
            try {
                //Refresh PublishersTable  
                DefaultTableModel PublishersT = (DefaultTableModel) Publishers_Table.getModel();
                PublishersT.setRowCount(0);
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("SELECT * FROM Publishers");
                
                while(rs.next())
                {
                    String P_id = rs.getString("P_id");
                    String P_name = rs.getString("P_name");
                    String Phone = rs.getString("Phone");
                    String City = rs.getString("City");
                    
                    //String array to store PublishersTable Data into jtable
                    
                    String PublishersData[] = {P_id, P_name, Phone, City};
                    DefaultTableModel PublishersTable = (DefaultTableModel) Publishers_Table.getModel();
                    
                    //add String array PublishersData into JTable
                    
                    PublishersTable.addRow(PublishersData);
                }
                //disconnect with database
                con.close();
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_View_Authors_Table1ActionPerformed

    private void Back_Authors_Panal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Authors_Panal1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_Back_Authors_Panal1ActionPerformed

    private void Publisher_CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publisher_CityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Publisher_CityActionPerformed

    private void Publisher_PhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publisher_PhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Publisher_PhoneActionPerformed

    private void Back_Authors_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Authors_TableActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_Back_Authors_TableActionPerformed

    private void Back_Publishers_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Publishers_TableActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);

    }//GEN-LAST:event_Back_Publishers_TableActionPerformed

    private void Search_for_BookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_for_BookMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_for_BookMouseEntered

    private void Search_for_BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_for_BookActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(10);
            try {
                String BISBN = Book_Search.getText();
                //Refresh BooksTable  
                DefaultTableModel BooksT = (DefaultTableModel) Book_Search_Code.getModel();
                BooksT.setRowCount(0);
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);
                
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("SELECT * FROM Books WHERE ISBN = '"+BISBN+"'");
                
                while(rs.next())
                {
                    String ISBN = rs.getString("ISBN");
                    String Title = rs.getString("Title");
                    String Price = String.valueOf(rs.getDouble("Price"));
                    String Page_count = rs.getString("Page_count");
                    String Type = rs.getString("Type");
                    String P_id = rs.getString("P_id");
                    
                    //String array to store BooksTable Data into jtable
                    
                    String BooksData[] = {ISBN, Title, Price, Page_count, Type, P_id};
                    DefaultTableModel BooksTable = (DefaultTableModel) Book_Search_Code.getModel();
                    
                    //add String array BooksData into JTable
                    
                    BooksTable.addRow(BooksData);
                }
                //disconnect with database
                con.close();
                Book_Search.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }

    }//GEN-LAST:event_Search_for_BookActionPerformed

    private void Search_for_AuthorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_for_AuthorMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_for_AuthorMouseEntered

    private void Search_for_AuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_for_AuthorActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(9);
        String Author_ID = Author_Search.getText();
            try {
                //Refresh PublishersTable  
                DefaultTableModel PublishersT = (DefaultTableModel) jTable2.getModel();
                PublishersT.setRowCount(0);
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("SELECT * FROM Authors WHERE Author_id = '"+Author_ID+"';");
                
                while(rs.next())
                {
                    String Author_id = rs.getString("Author_id");
                    String First_name = rs.getString("First_name");
                    String Last_name = rs.getString("Last_name");
                    
                    //String array to store AuthorsTable Data into jtable
                    
                    String AuthorsData[] = {Author_id, First_name, Last_name};
                    DefaultTableModel AuthorsTable = (DefaultTableModel) jTable2.getModel();
                    
                    //add String array AuthorsData into JTable
                    
                    AuthorsTable.addRow(AuthorsData);
                }
                //disconnect with database
                con.close();
                Author_Search.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_Search_for_AuthorActionPerformed

    private void Search_for_PublisherMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_for_PublisherMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_for_PublisherMouseEntered

    private void Search_for_PublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_for_PublisherActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(8);
            try {
                String P_ID = Publisher_Search.getText();
                //Refresh PublishersTable  
                DefaultTableModel PublishersT = (DefaultTableModel) jTable1.getModel();
                PublishersT.setRowCount(0);
                //call jdbc
                Class.forName(driver);
                //create connection
                Connection con = DriverManager.getConnection(url);
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("SELECT * FROM Publishers WHERE P_id = '"+P_ID+"';");
                
                while(rs.next())
                {
                    String P_id = rs.getString("P_id");
                    String P_name = rs.getString("P_name");
                    String Phone = rs.getString("Phone");
                    String City = rs.getString("City");
                    
                    //String array to store PublishersTable Data into jtable
                    
                    String PublishersData[] = {P_id, P_name, Phone, City};
                    DefaultTableModel PublishersTable = (DefaultTableModel) jTable1.getModel();
                    
                    //add String array PublishersData into JTable
                    
                    PublishersTable.addRow(PublishersData);
                }
                //disconnect with database
                con.close();
                Publisher_Search.setText(null);
            }catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }

    }//GEN-LAST:event_Search_for_PublisherActionPerformed

    private void Publisher_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publisher_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Publisher_SearchActionPerformed

    private void Book_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Book_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Book_SearchActionPerformed

    private void Back_Publisher_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Publisher_SearchActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_Back_Publisher_SearchActionPerformed

    private void Back_Author_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Author_SearchActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_Back_Author_SearchActionPerformed

    private void Back_Book_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Book_SearchActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_Back_Book_SearchActionPerformed

    private void Book_SearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Book_SearchMouseClicked
        // TODO add your handling code here:
        Book_Search.setText(null);
    }//GEN-LAST:event_Book_SearchMouseClicked

    private void Author_SearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Author_SearchMouseClicked
        // TODO add your handling code here:
        Author_Search.setText(null);
    }//GEN-LAST:event_Author_SearchMouseClicked

    private void Publisher_SearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Publisher_SearchMouseClicked
        // TODO add your handling code here:
        Publisher_Search.setText(null);
    }//GEN-LAST:event_Publisher_SearchMouseClicked

    private void Book_SearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Book_SearchMouseExited
        // TODO add your handling code here:;
    }//GEN-LAST:event_Book_SearchMouseExited

    private void Publisher_CodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publisher_CodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Publisher_CodeActionPerformed

    private void Page_CountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Page_CountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Page_CountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuGUI().setVisible(true);
            }
        });
    }

    private final String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    private final String url = "jdbc:sqlserver://localhost:1433;databaseName=EBookStore;user=mahmoudd;password=123456";
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Author;
    private javax.swing.JTextField Author_F_Name;
    private javax.swing.JTextField Author_ID;
    private javax.swing.JButton Author_Insert;
    private javax.swing.JTextField Author_L_Name;
    private javax.swing.JTextField Author_Search;
    private javax.swing.JTable Authors_Table;
    private javax.swing.JButton Back_Author_Search;
    private javax.swing.JButton Back_Authors_Panal;
    private javax.swing.JButton Back_Authors_Panal1;
    private javax.swing.JButton Back_Authors_Table;
    private javax.swing.JButton Back_Book_Search;
    private javax.swing.JButton Back_Books_Panal;
    private javax.swing.JButton Back_Books_Table;
    private javax.swing.JPanel Back_Books_Table_Panal;
    private javax.swing.JButton Back_Publisher_Search;
    private javax.swing.JButton Back_Publishers_Table;
    private javax.swing.JTextField Book_Code;
    private javax.swing.JTextField Book_Price;
    private javax.swing.JTextField Book_Search;
    private javax.swing.JTable Book_Search_Code;
    private javax.swing.JTextField Book_Title;
    private javax.swing.JTextField Book_Type;
    private javax.swing.JButton Books;
    private javax.swing.JPanel Books_Panal;
    private javax.swing.JPanel Books_Panal1;
    private javax.swing.JTable Books_Table;
    private javax.swing.JButton Delete_Books;
    private javax.swing.JButton Delete_Books1;
    private javax.swing.JButton Delete_Publisher;
    private javax.swing.JButton Insert_Books;
    private javax.swing.JPanel Menu_Panal;
    private javax.swing.JTextField Page_Count;
    private javax.swing.JButton Publisher;
    private javax.swing.JTextField Publisher_City;
    private javax.swing.JTextField Publisher_Code;
    private javax.swing.JTextField Publisher_ID;
    private javax.swing.JButton Publisher_Insert;
    private javax.swing.JTextField Publisher_Name;
    private javax.swing.JTextField Publisher_Phone;
    private javax.swing.JTextField Publisher_Search;
    private javax.swing.JTable Publishers_Table;
    private javax.swing.JButton Search;
    private javax.swing.JButton Search_for_Author;
    private javax.swing.JButton Search_for_Book;
    private javax.swing.JButton Search_for_Publisher;
    private javax.swing.JButton Update_Authors;
    private javax.swing.JButton Update_Books;
    private javax.swing.JButton Update_Publisher;
    private javax.swing.JButton View_Authors_Table;
    private javax.swing.JButton View_Authors_Table1;
    private javax.swing.JButton View_Books_Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
